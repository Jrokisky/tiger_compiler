55 shift/reduce conflicts

error:  state 15: shift/reduce conflict (shift LBRACK, reduce by rule 30)
error:  state 29: shift/reduce conflict (shift FUNCTION, reduce by rule 47)
error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 45)
error:  state 44: shift/reduce conflict (shift RPAREN, reduce by rule 36)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 13)
error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 7)
error:  state 118: shift/reduce conflict (shift GE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift GT, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift LE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift LT, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift NEQ, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift EQ, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift DIVIDE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift TIMES, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift MINUS, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift PLUS, reduce by rule 6)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 9)
error:  state 134: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 0:

	program : . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 5
	program	goto 144
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 1:

	exp : comp_ops .  (reduce by rule 17)



	.	reduce by rule 17


state 2:

	exp : arith_ops .  (reduce by rule 16)



	.	reduce by rule 16


state 3:

	exp : lvalue . ASSIGN exp 
	exp : lvalue .  (reduce by rule 12)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 18
	DOT	shift 17
	ASSIGN	shift 16


	.	reduce by rule 12


state 4:

	exp : sequence .  (reduce by rule 2)



	.	reduce by rule 2


state 5:

	program : exp .  (reduce by rule 0)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 0


state 6:

	exp : BREAK .  (reduce by rule 15)



	.	reduce by rule 15


state 7:

	exp : LET . decs IN sequenceExp END 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decs	goto 35
	dec	goto 34
	tydec	goto 33
	tydecs	goto 32
	vardec	goto 31
	fundec	goto 30
	fundecs	goto 29

	.	reduce by rule 44


state 8:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 39


	.	error


state 9:

	exp : WHILE . exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 40
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 10:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 41
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 11:

	exp : MINUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 42
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 12:

	exp : LPAREN . RPAREN 
	exp : LPAREN . exp RPAREN 
	sequence : LPAREN . sequenceExp RPAREN 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	RPAREN	shift 45
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 44
	sequence	goto 4
	sequenceExp	goto 43
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 13:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 14:

	exp : INT .  (reduce by rule 18)



	.	reduce by rule 18

error:  state 15: shift/reduce conflict (shift LBRACK, reduce by rule 30)

state 15:

	exp : ID . LBRACE record_fields RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LPAREN exp_star_comma RPAREN 
	lvalue : ID .  (reduce by rule 30)

	LPAREN	shift 48
	LBRACK	shift 47
	LBRACE	shift 46


	.	reduce by rule 30


state 16:

	exp : lvalue ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 49
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 17:

	lvalue : lvalue DOT . ID 

	ID	shift 50


	.	error


state 18:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 51
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 19:

	comp_ops : exp GE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 52
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 20:

	comp_ops : exp GT . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 53
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 21:

	comp_ops : exp LE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 54
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 22:

	comp_ops : exp LT . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 55
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 23:

	comp_ops : exp NEQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 56
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 24:

	comp_ops : exp EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 57
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 25:

	arith_ops : exp DIVIDE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 58
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 26:

	arith_ops : exp TIMES . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 59
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 27:

	arith_ops : exp MINUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 60
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 28:

	arith_ops : exp PLUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 61
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error

error:  state 29: shift/reduce conflict (shift FUNCTION, reduce by rule 47)

state 29:

	dec : fundecs .  (reduce by rule 47)
	fundecs : fundecs . fundec 

	FUNCTION	shift 38

	fundec	goto 62

	.	reduce by rule 47


state 30:

	fundecs : fundec .  (reduce by rule 60)



	.	reduce by rule 60


state 31:

	dec : vardec .  (reduce by rule 46)



	.	reduce by rule 46

error:  state 32: shift/reduce conflict (shift TYPE, reduce by rule 45)

state 32:

	dec : tydecs .  (reduce by rule 45)
	tydecs : tydecs . tydec 

	TYPE	shift 36

	tydec	goto 63

	.	reduce by rule 45


state 33:

	tydecs : tydec .  (reduce by rule 48)



	.	reduce by rule 48


state 34:

	decs : dec . decs 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	decs	goto 64
	dec	goto 34
	tydec	goto 33
	tydecs	goto 32
	vardec	goto 31
	fundec	goto 30
	fundecs	goto 29

	.	reduce by rule 44


state 35:

	exp : LET decs . IN sequenceExp END 

	IN	shift 65


	.	error


state 36:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 37:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 38:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 68


	.	error


state 39:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 40:

	exp : WHILE exp . DO exp 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	DO	shift 70


	.	error


state 41:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	THEN	shift 71


	.	error


state 42:

	exp : MINUS exp .  (reduce by rule 19)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 



	.	reduce by rule 19


state 43:

	sequence : LPAREN sequenceExp . RPAREN 

	RPAREN	shift 72


	.	error

error:  state 44: shift/reduce conflict (shift RPAREN, reduce by rule 36)

state 44:

	exp : LPAREN exp . RPAREN 
	sequenceExp : exp . exp_star_semi 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	SEMICOLON	shift 75
	RPAREN	shift 74
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19

	exp_star_semi	goto 73

	.	error


state 45:

	exp : LPAREN RPAREN .  (reduce by rule 3)



	.	reduce by rule 3


state 46:

	exp : ID LBRACE . record_fields RBRACE 

	ID	shift 77

	record_fields	goto 76

	.	reduce by rule 40


state 47:

	exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 78
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 48:

	exp : ID LPAREN . exp_star_comma RPAREN 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 80
	sequence	goto 4
	exp_star_comma	goto 79
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	reduce by rule 38


state 49:

	exp : lvalue ASSIGN exp .  (reduce by rule 11)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 11


state 50:

	lvalue : lvalue DOT ID .  (reduce by rule 31)



	.	reduce by rule 31


state 51:

	lvalue : lvalue LBRACK exp . RBRACK 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	RBRACK	shift 81
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	error


state 52:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 
	comp_ops : exp GE exp .  (reduce by rule 29)

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACK	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29
	IN	reduce by rule 29
	END	reduce by rule 29
	FUNCTION	reduce by rule 29
	VAR	reduce by rule 29
	TYPE	reduce by rule 29


	.	error


state 53:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp GT exp .  (reduce by rule 28)
	comp_ops : exp . GE exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 54:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp LE exp .  (reduce by rule 27)
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 55:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp LT exp .  (reduce by rule 26)
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 56:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp NEQ exp .  (reduce by rule 25)
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 57:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp EQ exp .  (reduce by rule 24)
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 58:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp DIVIDE exp .  (reduce by rule 22)
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 



	.	reduce by rule 22


state 59:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp TIMES exp .  (reduce by rule 21)
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 



	.	reduce by rule 21


state 60:

	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	arith_ops : exp MINUS exp .  (reduce by rule 23)
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 23


state 61:

	arith_ops : exp . PLUS exp 
	arith_ops : exp PLUS exp .  (reduce by rule 20)
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 20


state 62:

	fundecs : fundecs fundec .  (reduce by rule 61)



	.	reduce by rule 61


state 63:

	tydecs : tydecs tydec .  (reduce by rule 49)



	.	reduce by rule 49


state 64:

	decs : dec decs .  (reduce by rule 43)



	.	reduce by rule 43


state 65:

	exp : LET decs IN . sequenceExp END 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 83
	sequence	goto 4
	sequenceExp	goto 82
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 87


	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 88
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 89
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 71:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 90
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 72:

	sequence : LPAREN sequenceExp RPAREN .  (reduce by rule 33)



	.	reduce by rule 33


state 73:

	sequenceExp : exp exp_star_semi .  (reduce by rule 34)



	.	reduce by rule 34


state 74:

	exp : LPAREN exp RPAREN .  (reduce by rule 4)



	.	reduce by rule 4


state 75:

	exp_star_semi : SEMICOLON . exp exp_star_semi 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 91
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 76:

	exp : ID LBRACE record_fields . RBRACE 

	RBRACE	shift 92


	.	error


state 77:

	record_fields : ID . EQ exp record_fields_mult 

	EQ	shift 93


	.	error


state 78:

	exp : ID LBRACK exp . RBRACK OF exp 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	RBRACK	shift 94
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	error


state 79:

	exp : ID LPAREN exp_star_comma . RPAREN 

	RPAREN	shift 95


	.	error


state 80:

	exp_star_comma : exp . COMMA exp_star_comma 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	COMMA	shift 96
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	error


state 81:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 32)



	.	reduce by rule 32


state 82:

	exp : LET decs IN sequenceExp . END 

	END	shift 97


	.	error


state 83:

	sequenceExp : exp . exp_star_semi 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	SEMICOLON	shift 75
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19

	exp_star_semi	goto 73

	.	reduce by rule 36


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 101
	LBRACE	shift 100
	ARRAY	shift 99

	ty	goto 98

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 102
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 105

	tyfields	goto 104

	.	reduce by rule 55


state 88:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	TO	shift 106


	.	error

error:  state 89: shift/reduce conflict (shift GE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 13)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 13)

state 89:

	exp : WHILE exp DO exp .  (reduce by rule 13)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 13

error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 7)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 7)

state 90:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 7)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	ELSE	shift 107


	.	reduce by rule 7


state 91:

	exp_star_semi : SEMICOLON exp . exp_star_semi 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	SEMICOLON	shift 75
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19

	exp_star_semi	goto 108

	.	reduce by rule 36


state 92:

	exp : ID LBRACE record_fields RBRACE .  (reduce by rule 8)



	.	reduce by rule 8


state 93:

	record_fields : ID EQ . exp record_fields_mult 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 109
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 94:

	exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 110


	.	error


state 95:

	exp : ID LPAREN exp_star_comma RPAREN .  (reduce by rule 10)



	.	reduce by rule 10


state 96:

	exp_star_comma : exp COMMA . exp_star_comma 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 80
	sequence	goto 4
	exp_star_comma	goto 111
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	reduce by rule 38


state 97:

	exp : LET decs IN sequenceExp END .  (reduce by rule 1)



	.	reduce by rule 1


state 98:

	tydec : TYPE ID EQ ty .  (reduce by rule 50)



	.	reduce by rule 50


state 99:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 100:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 105

	tyfields	goto 113

	.	reduce by rule 55


state 101:

	ty : ID .  (reduce by rule 51)



	.	reduce by rule 51


state 102:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 58


state 103:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 104:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 115


	.	error


state 105:

	tyfields : ID . COLON ID tyfield_list 

	COLON	shift 116


	.	error


state 106:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 117
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 107:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 118
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 108:

	exp_star_semi : SEMICOLON exp exp_star_semi .  (reduce by rule 35)



	.	reduce by rule 35


state 109:

	record_fields : ID EQ exp . record_fields_mult 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	COMMA	shift 120
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19

	record_fields_mult	goto 119

	.	reduce by rule 42


state 110:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 121
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 111:

	exp_star_comma : exp COMMA exp_star_comma .  (reduce by rule 37)



	.	reduce by rule 37


state 112:

	ty : ARRAY OF . ID 

	ID	shift 122


	.	error


state 113:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 123


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 124
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 126
	EQ	shift 125


	.	error


state 116:

	tyfields : ID COLON . ID tyfield_list 

	ID	shift 127


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	DO	shift 128


	.	error

error:  state 118: shift/reduce conflict (shift GE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift GT, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift LE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift LT, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift NEQ, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift EQ, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift DIVIDE, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift TIMES, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift MINUS, reduce by rule 6)
error:  state 118: shift/reduce conflict (shift PLUS, reduce by rule 6)

state 118:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 6)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 6


state 119:

	record_fields : ID EQ exp record_fields_mult .  (reduce by rule 39)



	.	reduce by rule 39


state 120:

	record_fields_mult : COMMA . ID EQ exp record_fields_mult 

	ID	shift 129


	.	error

error:  state 121: shift/reduce conflict (shift GE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 9)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 9)

state 121:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 9)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 9


state 122:

	ty : ARRAY OF ID .  (reduce by rule 53)



	.	reduce by rule 53


state 123:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 124:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 59


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 130
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 131


	.	error


state 127:

	tyfields : ID COLON ID . tyfield_list 

	COMMA	shift 133

	tyfield_list	goto 132

	.	reduce by rule 57


state 128:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 134
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 129:

	record_fields_mult : COMMA ID . EQ exp record_fields_mult 

	EQ	shift 135


	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 62)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 62


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 136


	.	error


state 132:

	tyfields : ID COLON ID tyfield_list .  (reduce by rule 54)



	.	reduce by rule 54


state 133:

	tyfield_list : COMMA . ID COLON ID tyfield_list 

	ID	shift 137


	.	error

error:  state 134: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 134: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 134:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 14)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 14


state 135:

	record_fields_mult : COMMA ID EQ . exp record_fields_mult 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 138
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6

	exp	goto 139
	sequence	goto 4
	lvalue	goto 3
	arith_ops	goto 2
	comp_ops	goto 1

	.	error


state 137:

	tyfield_list : COMMA ID . COLON ID tyfield_list 

	COLON	shift 140


	.	error


state 138:

	record_fields_mult : COMMA ID EQ exp . record_fields_mult 
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	COMMA	shift 120
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19

	record_fields_mult	goto 141

	.	reduce by rule 42


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 63)
	arith_ops : exp . PLUS exp 
	arith_ops : exp . TIMES exp 
	arith_ops : exp . DIVIDE exp 
	arith_ops : exp . MINUS exp 
	comp_ops : exp . EQ exp 
	comp_ops : exp . NEQ exp 
	comp_ops : exp . LT exp 
	comp_ops : exp . LE exp 
	comp_ops : exp . GT exp 
	comp_ops : exp . GE exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 63


state 140:

	tyfield_list : COMMA ID COLON . ID tyfield_list 

	ID	shift 142


	.	error


state 141:

	record_fields_mult : COMMA ID EQ exp record_fields_mult .  (reduce by rule 41)



	.	reduce by rule 41


state 142:

	tyfield_list : COMMA ID COLON ID . tyfield_list 

	COMMA	shift 133

	tyfield_list	goto 143

	.	reduce by rule 57


state 143:

	tyfield_list : COMMA ID COLON ID tyfield_list .  (reduce by rule 56)



	.	reduce by rule 56


state 144:


	EOF	accept


	.	error

423 of 915 action table entries left after compaction
207 goto table entries
